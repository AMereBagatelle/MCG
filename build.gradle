plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "1.1.0"
}

archivesBaseName = project.archives_base_name + "-" + project.minecraft_version
version = project.mod_version
group = project.maven_group

repositories {
    maven { url = "https://jitpack.io" }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Non-mod imports

    compileOnly "com.google.code.findbugs:jsr305:3.0.2"
    compileOnly 'org.jetbrains:annotations:16.0.2'

    // fabric api resource loader
    modImplementation(include(fabricApi.module("fabric-resource-loader-v0", project.fabric_version)))
    modImplementation(include(fabricApi.module("fabric-key-binding-api-v1", project.fabric_version)))
    // fabric api keybindings
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth(type: TaskModrinthUpload) {
    token = System.getenv('MODRINTH_TOKEN')
    projectId = 'eVXHt0JE'
    versionName = "${project.archives_base_name} ${project.version}"
    versionNumber = project.version
    changelog = System.getenv('CHANGELOG_BODY')
    releaseType = 'release'
    uploadFile = jar.outputs.getFiles().asPath
    addGameVersion("${project.minecraft_version}")
    addLoader('fabric')
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
